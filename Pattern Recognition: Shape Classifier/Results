Getting data for:  circle
Getting data for:  triangle
Getting data for:  tetragon
Getting data for:  pentagon
Getting data for:  other
Number of training images:  2262 

KNN
Accuracy = 96.15384615384616
[[451   0   0   0   0]
 [ 20 432   0   0   0]
 [  6   8 439   0   0]
 [  9   2   3 440   0]
 [ 26  10   2   1 413]] 

Number of validation images:  252
Val Accuracy = 90.07936507936508 

LR
Accuracy = 100.0
[[451   0   0   0   0]
 [  0 452   0   0   0]
 [  0   0 453   0   0]
 [  0   0   0 454   0]
 [  0   0   0   0 452]] 

Number of validation images:  252
Val Accuracy = 47.22222222222222 

LDA
Accuracy = 88.01945181255526
[[355  27  29   3  37]
 [ 30 404  12   0   6]
 [ 23  14 402   1  13]
 [ 20   6   6 420   2]
 [ 17  10  14   1 410]] 

Number of validation images:  252
Val Accuracy = 45.63492063492063 

CART
Accuracy = 100.0
[[451   0   0   0   0]
 [  0 452   0   0   0]
 [  0   0 453   0   0]
 [  0   0   0 454   0]
 [  0   0   0   0 452]] 

Number of validation images:  252
Val Accuracy = 67.06349206349206 

RF
Accuracy = 100.0
[[451   0   0   0   0]
 [  0 452   0   0   0]
 [  0   0 453   0   0]
 [  0   0   0 454   0]
 [  0   0   0   0 452]] 

Number of validation images:  252
Val Accuracy = 85.31746031746032 

NB
Accuracy = 37.97524314765694
[[438   1   1   2   9]
 [200  86   1   9 156]
 [149  51  65  51 137]
 [149  42   7 192  64]
 [362   8   1   3  78]] 

Number of validation images:  252
Val Accuracy = 33.730158730158735 

SVM
Accuracy = 87.35632183908046
[[419   6  14   0  12]
 [ 30 362  40   0  20]
 [  9  12 418   0  14]
 [ 56  30   0 367   1]
 [ 28   6   8   0 410]] 

Number of validation images:  252
Val Accuracy = 77.77777777777779 





Best Validation Accuracy = 90.07936507936508 

('KNN', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=2, p=2,
                     weights='uniform'))
KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=2, p=2,
                     weights='uniform')
Best Model Is KNN 





Getting data for:  circle
Getting data for:  triangle
Getting data for:  tetragon
Getting data for:  pentagon
Getting data for:  other
Test Accuracy = 90.07936507936508


